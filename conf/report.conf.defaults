# Copyright (C) Inverse inc.
[authentications]
type=abstract
description=<<EOT
All the authentications (RADIUS, portal) that have occured on the server.
EOT
# The table to search from
base_table=auth_log
# The columns to select
columns=auth_log.process_name as "Process Name", auth_log.mac "MAC Address", auth_log.pid as "Owner", auth_log.status as "Status", auth_log.attempted_at as "Attempted at", auth_log.completed_at as "Completed at", auth_log.source as "Source", auth_log.profile as "Connection Profile"
searches=string:Process Name:auth_log.process_name,string:MAC Address:auth_log.mac,string:Owner:auth_log.pid,string:Status:auth_log.status,string:Source:auth_log.source
date_field=attempted_at
base_conditions_operator=any
person_fields=Owner
node_fields=MAC Address
order_fields=-auth_log.attempted_at

[User::Registration::SMS]
type=abstract
# The table to search from
base_table=activation
# The columns to select
columns=activation.pid as "Owner", activation.mac "MAC Address", sms_carrier.name as "Carrier", activation.activation_code as "Activation code", activation.expiration as "Code expiration", activation.status as "Status", activation.portal as "Connection profile"
searches=string:Owner:activation.pid,string:MAC Address:activation.mac,string:Activation Code:activation.activation_code,string:Status:activation.status,string:Connection Profile:activation.portal
# Left join sms_carrier
joins=<<EOT
=>{activation.carrier_id=sms_carrier.id} sms_carrier|sms_carrier
EOT
date_field=expiration
# Display only the sms registration
base_conditions=activation.type:=:sms
base_conditions_operator=all
person_fields=Owner
node_fields=MAC Address
order_fields=-activation.expiration

[User::Registration::Email]
type=abstract
# The table to search from
base_table=activation
# The columns to select
columns=activation.pid as "Owner", activation.mac "MAC Address", activation.activation_code as "Activation code", activation.expiration as "Code expiration", activation.unregdate as "Unreg date", activation.status as "Status", activation.portal as "Connection profile"
searches=string:Owner:activation.pid,string:MAC Address:activation.mac,string:Activation Code:activation.activation_code,string:Status:activation.status,string:Connection Profile:activation.portal
date_field=expiration
# Display only the email registration
base_conditions=activation.type:=:guest
base_conditions_operator=all
person_fields=Owner
node_fields=MAC Address

[User::Registration::Sponsor]
type=abstract
# The table to search from
base_table=activation
# The columns to select
columns=activation.pid as "Owner", activation.contact_info as "Sponsor", activation.mac "MAC Address",  activation.expiration as "Registration expiration", activation.status as "Status", activation.portal as "Connection profile",
searches=string:Owner:activation.pid,string:Sponsor:activation.contact_info,string:MAC Address:activation.mac,string:Status:activation.status,string:Connection Profile:activation.portal
date_field=expiration
# Display only the sponsor registration
base_conditions=activation.type:=:sponsor
base_conditions_operator=all
person_fields=Owner
node_fields=MAC Address

[ip4log-history]
type=abstract
description=<<EOT
IP address history of the devices on the network (1 week is kept by default)
EOT
# The table to search from
base_table=ip4log_history
# The columns to select
columns= ip4log_history.mac "MAC Address", ip4log_history.ip as "IP", ip4log_history.start_time as "Start time", ip4log_history.end_time as "End time"
searches=string:MAC Address:ip4log_history.mac,string:IP:ip4log_history.ip
date_field=start_time
# Display only the sponsor registration
#base_conditions=activation.type:=:sponsor
base_conditions_operator=all
node_fields=MAC Address
order_fields=-ip4log_history.start_time

[ip4log-archive]
type=abstract
description=<<EOT
IP address archive of the devices on your network when enabled (see Maintenance section)
EOT
# The table to search from
base_table=ip4log_archive
# The columns to select
columns= ip4log_archive.mac "MAC Address", ip4log_archive.ip as "IP", ip4log_archive.start_time as "Start time", ip4log_archive.end_time as "End time"
searches=string:MAC Address:ip4log_archive.mac,string:IP:ip4log_archive.ip
date_field=start_time
# Display only the sponsor registration
#base_conditions=activation.type:=:sponsor
base_conditions_operator=all
node_fields=MAC Address

[open-security-events]
type=abstract
description=<<EOT
List of open security events on the network
EOT
base_table=security_event
columns=security_event.start_date "Event date", class.description "Security Event Name", node.status "Node status", node.mac "MAC Address", node.computername "Computer Name", node.pid "Owner", node.device_class "Device Class", node_category.name "Role"
joins=<<EOT
=>{class.security_event_id=security_event.security_event_id} class|class
=>{security_event.mac=node.mac} node|node
=>{node_category.category_id=node.category_id} node_category|node_category
EOT
node_fields=MAC Address
person_fields=Owner
date_field=start_date
base_conditions=security_event.status:=:open

[closed-security-events]
type=abstract
description=<<EOT
List of closed security events on the network
EOT
base_table=security_event
columns=security_event.start_date "Event date", class.description "Security Event Name", node.status "Node status", node.mac "MAC Address", node.computername "Computer Name", node.pid "Owner", node.device_class "Device Class", node_category.name "Role"
joins=<<EOT
=>{class.security_event_id=security_event.security_event_id} class|class
=>{security_event.mac=node.mac} node|node
=>{node_category.category_id=node.category_id} node_category|node_category
EOT
node_fields=MAC Address
person_fields=Owner
date_field=start_date
base_conditions=security_event.status:=:closed

[Node::Active::All]
type=sql
description=<<EOT
All currently known active nodes
EOT
columns=mac, ip, start_time, pid, detect_date, regdate, lastskip, status, user_agent, computername, notes, last_arp, last_dhcp, os
sql=<<EOT
BEGIN NOT ATOMIC
  SET @TENANT_ID = ?, @CURSOR = ?;
  SELECT
    n.mac as mac,
    ip,
    start_time,
    pid,
    detect_date,
    regdate,
    lastskip,
    status,
    user_agent,
    computername,
    notes,
    last_arp,
    last_dhcp,
    device_type AS os
  FROM node n LEFT JOIN ip4log i USING (tenant_id, mac)
  WHERE
    n.tenant_id = @TENANT_ID AND
  (i.end_time = 0 OR i.end_time > NOW()) AND
    n.mac >= @CURSOR
    ORDER BY n.mac
    LIMIT ?;
END;
EOT
cursor_type=field
cursor_field=mac
cursor_default=00:00:00:00:00:00
default_limit=100
